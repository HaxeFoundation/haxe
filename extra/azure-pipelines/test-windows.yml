parameters:
  name: 'TestWindows'
  vmImage: 'windows-2019'
  arch: '64' # or '32'

jobs:
  - job: ${{ parameters.name }}
    dependsOn: BuildWin${{ parameters.arch }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    variables:
      HAXELIB_ROOT: C:/haxelib
    strategy:
      matrix:
        # https://github.com/HaxeFoundation/haxe/issues/8600
        ${{ if eq(parameters.arch, '64') }}:
          macro:
            TEST: macro
        neko:
          TEST: neko
        hl:
          TEST: hl
        cpp:
          TEST: cpp
          HXCPP_COMPILE_CACHE: C:/hxcache
        java:
          # https://github.com/HaxeFoundation/haxe/issues/8601
          ${{ if eq(parameters.arch, '64') }}:
            TEST: java,jvm
          ${{ if eq(parameters.arch, '32') }}:
            TEST: java
        cs:
          TEST: cs
        js:
          TEST: js
        php:
          TEST: php
        # TODO. flash has never been enabled on our AppVeyor builds.
        # flash:
        #   TEST: flash9
        python:
          TEST: python
        # TODO. Lua has never been enabled on our AppVeyor builds.
        # lua:
        #   TEST: lua
    steps:
      - checkout: self
        fetchDepth: 20
      - template: install-neko-snapshot.yaml
        parameters:
          ${{ if eq(parameters.arch, '64') }}:
            platform: windows64
          ${{ if eq(parameters.arch, '32') }}:
            platform: windows
      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: 'win${{ parameters.arch }}Binaries'
          targetPath: win${{ parameters.arch }}Binaries
      - powershell: |
          Set-PSDebug -Trace 1
          7z x win${{ parameters.arch }}Binaries/*_bin.zip -owin${{ parameters.arch }}Binaries
          $dir = Get-ChildItem win${{ parameters.arch }}Binaries/* -Name -Directory
          Rename-Item win${{ parameters.arch }}Binaries/$dir haxe
          $dir = '' + ( get-location ) + '\win${{ parameters.arch }}Binaries\haxe'
          dir $dir
          Set-PSDebug -Trace 0
          Write-Host "##vso[task.prependpath]$dir"
        displayName: Setup Haxe
      - script: haxe -version
        displayName: Print Haxe version
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
      - powershell: |
          Set-PSDebug -Trace 1
          $pypath = python -c "import sys; print(sys.executable)"
          $py3path = $pypath.replace("python.exe","python3.exe")
          cmd /c mklink $py3path $pypath
          python3 -V
        displayName: "Make Python 3 be available as python3 in the cmdline"
      - script: |
          mkdir "$(HAXELIB_ROOT)"
          haxelib setup "$(HAXELIB_ROOT)"
        displayName: Setup haxelib
      - script: haxe RunCi.hxml
        workingDirectory: $(Build.SourcesDirectory)/tests
        displayName: Test
