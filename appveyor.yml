version: "{build}"

environment:
    global:
        HAXELIB_ROOT: C:/projects/haxelib
        CYG_ROOT: C:/cygwin64
        ADD_REVISION: 1
        MYSQL_PATH: C:\Program Files\MySQL\MySQL Server 5.7
        MYSQL_USER: root
        MYSQL_PASSWORD: Password12!
        HXBUILDS_AWS_ACCESS_KEY_ID:
          secure: fggQXlr5xGGl0znUi0UkqPWd6LviHnk0TR6YxJmuV3U=
        HXBUILDS_AWS_SECRET_ACCESS_KEY:
          secure: ewwkKcjnSKl/Vtrz1SXmI6XKk1ENmJDyzm5YaR2wi03foRhTke29TvymB21rDTSl
    matrix:
        - TEST: "neko,python,cs,java,macro"
        - TEST: "php7,php"
          DEPLOY: 1
        - TEST: "cpp"

services:
    - mysql

skip_tags: true

cache:
    - opam64.tar.xz -> appveyor.yml

install:
    - 'git submodule update --init --recursive'
    - '%CYG_ROOT%/bin/bash -lc "echo initialize"'
    - choco install curl
    # Install ocaml
    - curl -fsSL -o cygwin-setup.exe --retry 3 https://cygwin.com/setup-x86_64.exe
    - 'cygwin-setup.exe -g -q -R "%CYG_ROOT%" -P make -P git -P mingw64-x86_64-zlib -P rsync -P patch -P diffutils -P curl -P unzip -P m4 -P perl -P mingw64-x86_64-gcc-core -P mingw64-x86_64-pcre'
    - if not exist "opam64.tar.xz" (
        curl -fsSL -o opam64.tar.xz --retry 3 https://github.com/fdopen/opam-repository-mingw/releases/download/0.0.0.1/opam64.tar.xz
      )
    - 7z x "opam64.tar.xz" -so | 7z x -aoa -si -ttar
    - '%CYG_ROOT%/bin/bash -lc "cd \"$OLDPWD\" && bash opam64/install.sh"'
    - '%CYG_ROOT%/bin/bash -lc "opam init mingw \"https://github.com/fdopen/opam-repository-mingw.git\" --comp 4.02.3+mingw64c --switch 4.02.3+mingw64c --auto-setup --yes"'
    - '%CYG_ROOT%/bin/bash -lc "opam install camlp4 sedlex ocamlfind camlzip xml-light extlib rope ptmap --yes"'
    # Install neko
    - choco install neko --prerelease --ignore-dependencies -s 'https://ci.appveyor.com/nuget/neko' -y
    - choco install chocolatey-core.extension php --ignore-dependencies -y
    - echo extension=php_mysqli.dll >> C:\tools\php71\php.ini
    - echo extension=php_sqlite3.dll >> C:\tools\php71\php.ini
    - echo extension=php_openssl.dll >> C:\tools\php71\php.ini
    - echo extension=php_pdo_mysql.dll >> C:\tools\php71\php.ini
    - echo extension=php_pdo_sqlite.dll >> C:\tools\php71\php.ini
    - RefreshEnv
    - neko -version
    # setup python
    - cmd: mklink C:\Python34-x64\python3.exe C:\Python34-x64\python.exe
    - set PATH=%PATH%;C:\Python34-x64
    # expose the dll files
    - set "PATH=%PATH%;%CYG_ROOT%/usr/x86_64-w64-mingw32/sys-root/mingw/bin"
    - choco install awscli

build_script:
    - 'cd %APPVEYOR_BUILD_FOLDER%'
    - '%CYG_ROOT%/bin/bash -lc "cd \"$OLDPWD\" && make -s -f Makefile.win"'
    - 'set PATH=%PATH%;%APPVEYOR_BUILD_FOLDER%'
    - 'set HAXEPATH=%APPVEYOR_BUILD_FOLDER%'
    - '%CYG_ROOT%/bin/bash -lc "cd \"$OLDPWD\" && make -s -f Makefile.win package_bin"'
    - '%CYG_ROOT%/bin/bash -lc "cd \"$OLDPWD\" && make -s -f Makefile.win package_choco"'
    - move out\haxe.*.nupkg .
    - dir %APPVEYOR_BUILD_FOLDER%\out
    - cd %APPVEYOR_BUILD_FOLDER%/tests/
    - mkdir "%HAXELIB_ROOT%"
    - haxelib setup "%HAXELIB_ROOT%"
    # setup mysql for testing
    - set PATH=%MYSQL_PATH%\bin;%PATH%
    - mysql --user=%MYSQL_USER% --password=%MYSQL_PASSWORD% -e "create user 'travis'@'localhost';"
    - mysql --user=%MYSQL_USER% --password=%MYSQL_PASSWORD% -e "create database haxe_test;"
    - mysql --user=%MYSQL_USER% --password=%MYSQL_PASSWORD% -e "grant all on haxe_test.* to 'travis'@'localhost';"

test_script:
    - cd %APPVEYOR_BUILD_FOLDER%/tests/
    - haxe -version
    - haxe RunCi.hxml
    - neko RunCi.n

artifacts:
    - path: 'out/*.zip'
    - path: '*.nupkg'
