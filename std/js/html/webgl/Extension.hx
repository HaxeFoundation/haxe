/*
 * Copyright (C)2005-2018 Haxe Foundation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

// This file is automatically generated. Do not edit!

package js.html.webgl;

import js.html.webgl.extension.*;

enum abstract Extension<T>(String) from String to String {
	var ANGLE_instanced_arrays: Extension<ANGLEInstancedArrays> = 'ANGLE_instanced_arrays';
	var EXT_blend_minmax: Extension<EXTBlendMinmax> = 'EXT_blend_minmax';
	var EXT_color_buffer_float: Extension<EXTColorBufferFloat> = 'EXT_color_buffer_float';
	var EXT_color_buffer_half_float: Extension<EXTColorBufferHalfFloat> = 'EXT_color_buffer_half_float';
	var EXT_disjoint_timer_query: Extension<EXTDisjointTimerQuery> = 'EXT_disjoint_timer_query';
	var EXT_frag_depth: Extension<EXTFragDepth> = 'EXT_frag_depth';
	var EXT_sRGB: Extension<EXTSrgb> = 'EXT_sRGB';
	var EXT_shader_texture_lod: Extension<EXTShaderTextureLod> = 'EXT_shader_texture_lod';
	var EXT_texture_filter_anisotropic: Extension<EXTTextureFilterAnisotropic> = 'EXT_texture_filter_anisotropic';
	var OES_element_index_uint: Extension<OESElementIndexUint> = 'OES_element_index_uint';
	var OES_standard_derivatives: Extension<OESStandardDerivatives> = 'OES_standard_derivatives';
	var OES_texture_float: Extension<OESTextureFloat> = 'OES_texture_float';
	var OES_texture_float_linear: Extension<OESTextureFloatLinear> = 'OES_texture_float_linear';
	var OES_texture_half_float: Extension<OESTextureHalfFloat> = 'OES_texture_half_float';
	var OES_texture_half_float_linear: Extension<OESTextureHalfFloatLinear> = 'OES_texture_half_float_linear';
	var OES_vertex_array_object: Extension<OESVertexArrayObject> = 'OES_vertex_array_object';
	var WEBGL_color_buffer_float: Extension<WEBGLColorBufferFloat> = 'WEBGL_color_buffer_float';
	var WEBGL_compressed_texture_astc: Extension<WEBGLCompressedTextureAstc> = 'WEBGL_compressed_texture_astc';
	var WEBGL_compressed_texture_atc: Extension<WEBGLCompressedTextureAtc> = 'WEBGL_compressed_texture_atc';
	var WEBGL_compressed_texture_etc: Extension<WEBGLCompressedTextureEtc> = 'WEBGL_compressed_texture_etc';
	var WEBGL_compressed_texture_etc1: Extension<WEBGLCompressedTextureEtc1> = 'WEBGL_compressed_texture_etc1';
	var WEBGL_compressed_texture_pvrtc: Extension<WEBGLCompressedTexturePvrtc> = 'WEBGL_compressed_texture_pvrtc';
	var WEBGL_compressed_texture_s3tc: Extension<WEBGLCompressedTextureS3tc> = 'WEBGL_compressed_texture_s3tc';
	var WEBGL_compressed_texture_s3tc_srgb: Extension<WEBGLCompressedTextureS3tcSrgb> = 'WEBGL_compressed_texture_s3tc_srgb';
	var WEBGL_debug_renderer_info: Extension<WEBGLDebugRendererInfo> = 'WEBGL_debug_renderer_info';
	var WEBGL_debug_shaders: Extension<WEBGLDebugShaders> = 'WEBGL_debug_shaders';
	var WEBGL_depth_texture: Extension<WEBGLDepthTexture> = 'WEBGL_depth_texture';
	var WEBGL_draw_buffers: Extension<WEBGLDrawBuffers> = 'WEBGL_draw_buffers';
	var WEBGL_lose_context: Extension<WEBGLLoseContext> = 'WEBGL_lose_context';
}
