language: cpp

os:
  - linux
  # - osx #https://github.com/travis-ci/travis-ci/issues/2792

env:
  global:
    # SAUCE_USERNAME
    - secure: SjyKefmjUEXi0IKHGGpcbLAajU0mLHONg8aA8LoY7Q9nAkSN6Aql+fzS38Boq7w1jWn+2FOpr+4jy0l6wVd/bftsF+huFfYpFJmdh8BlKmE0K71zZAral0H1c7YxkuQpPiJCIFGXqtkvev7SWTy0z31u7kuuQeEyW27boXe5cDA=
    # SAUCE_ACCESS_KEY
    - secure: sUvWUjCyPuWht4seNa4f2VG9DkvXkhZyLZfjJO9TUAHB2JndS16E2j/qrvKEjycyH6w8tU/B9vnjDRvvGrYXxEXcBEwsJVfkorFnRl9uwGCGIYrzjMhssEl3fMYZK7P304f+gAp5ULrDBX2gIaKeSa8lUNRtz2PsZOieE4kMdhk=
  matrix:
    - TEST=third-party
    - TEST=macro
    - TEST=neko
    - TEST=js
    - TEST=php
    - TEST=cpp
    - TEST=flash9
    - TEST=as3
    - TEST=java
    - TEST=cs
    - TEST=python

matrix:
  # fast_finish: true #https://github.com/travis-ci/travis-ci/issues/1696

before_script:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then mysql -u root -e "CREATE DATABASE haxe_test;"; fi

install:
  - if [ -z "${TRAVIS_OS_NAME}" ]; then export TRAVIS_OS_NAME=linux; fi; # for our forks that do not have mult-os enabled.
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then travis_retry sudo apt-get update -qq; travis_retry sudo apt-get install ocaml zlib1g-dev libgc-dev -qq; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then travis_retry brew update; travis_retry brew install phinze/cask/brew-cask; travis_retry brew install ocaml; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then travis_retry git clone https://github.com/HaxeFoundation/neko.git ~/neko && cd ~/neko && make os=${TRAVIS_OS_NAME} -s && sudo make install -s && cd $TRAVIS_BUILD_DIR; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then travis_retry brew install neko --HEAD; fi

script:
  - make -s
  - make tools -s
  - sudo make install -s
  - cd tests/
  - mkdir ~/haxelib && haxelib setup ~/haxelib
  - haxelib git hx-yaml https://github.com/mikestead/hx-yaml master src
  - haxe -version
  - haxe -neko RunCi.n -main RunCi -lib hx-yaml
  - neko RunCi.n

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/95a5fa471c27beee8e7c
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false
